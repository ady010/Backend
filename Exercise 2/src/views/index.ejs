<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create User</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r134/three.min.js"></script>
    <style>
        /* Glassmorphism Styling */
        .glass {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(15px);
            -webkit-backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 1rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
        }

        body {
            margin: 0;
            overflow: hidden; /* Prevent scrolling */
        }

        canvas {
            position: fixed;
            top: 0;
            left: 0;
            z-index: -1; /* Push canvas behind content */
        }

        /* Cursor Ripple Effect */
        .cursor {
            position: fixed;
            top: 0;
            left: 0;
            width: 25px;
            height: 25px;
            background: rgba(255, 255, 255, 0.4);
            border: 2px solid rgba(255, 255, 255, 0.6);
            border-radius: 50%;
            pointer-events: none;
            transform: translate(-50%, -50%);
        }
    </style>
</head>
<body class="bg-black text-white flex items-center justify-center min-h-screen relative">
    <!-- Three.js Canvas -->
    <canvas id="bg"></canvas>

    <!-- Form Section -->
    <form action="/create-user" method="post" class="bg-transparent p-8 w-full max-w-lg">
        <h2 class="text-3xl font-bold mb-8 text-center bg-clip-text text-transparent bg-gradient-to-r from-green-400 to-blue-400 animate-pulse">
            Create User
        </h2>
        <div class="space-y-6">
            <!-- Name Input -->
            <div>
                <label for="name" class="block text-sm font-medium text-green-400">Name</label>
                <input 
                    type="text" 
                    id="name" 
                    name="name" 
                    placeholder="Enter your name" 
                    class="w-full px-4 py-3 bg-gray-900 text-green-300 border border-green-500 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400 transition"
                >
            </div>
            <!-- Email Input -->
            <div>
                <label for="email" class="block text-sm font-medium text-green-400">Email</label>
                <input 
                    type="text" 
                    id="email" 
                    name="email" 
                    placeholder="Enter your email" 
                    class="w-full px-4 py-3 bg-gray-900 text-green-300 border border-green-500 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400 transition"
                >
            </div>
            <!-- Bio Input -->
            <div>
                <label for="bio" class="block text-sm font-medium text-green-400">Bio</label>
                <textarea 
                    id="bio" 
                    name="bio" 
                    placeholder="Write a short bio" 
                    rows="3" 
                    class="w-full px-4 py-3 bg-gray-900 text-green-300 border border-green-500 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400 transition resize-none"
                ></textarea>
            </div>
            <!-- Image URL Input -->
            <div>
                <label for="img" class="block text-sm font-medium text-green-400">Image URL</label>
                <input 
                    type="text" 
                    id="img" 
                    name="img" 
                    placeholder="Enter image URL" 
                    class="w-full px-4 py-3 bg-gray-900 text-green-300 border border-green-500 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400 transition"
                >
            </div>
            <!-- Submit Button -->
            <button 
                type="submit" 
                class="w-full bg-gradient-to-r from-green-500 to-blue-500 text-black font-bold py-3 rounded-lg hover:scale-105 hover:shadow-xl transition-transform duration-300 flex justify-center items-center"
            >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
                </svg>
                Create User
            </button>
        </div>
    </form>

    <script>
        // Cursor Ripple Motion
        const cursor = document.querySelector(".cursor");
        document.addEventListener("mousemove", (e) => {
            cursor.style.top = `${e.clientY}px`;
            cursor.style.left = `${e.clientX}px`;
        });

        // Three.js Scene
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer({ canvas: document.querySelector("#bg") });

        renderer.setPixelRatio(window.devicePixelRatio);
        renderer.setSize(window.innerWidth, window.innerHeight);
        camera.position.setZ(30);

        // Add Light
        const ambientLight = new THREE.AmbientLight(0xffffff, 1);
        scene.add(ambientLight);

        // Rotating Cube (Replace with a Castle Model if available)
        const geometry = new THREE.BoxGeometry(10, 10, 10);
        const material = new THREE.MeshStandardMaterial({ color: 0x00ff00, wireframe: true });
        const cube = new THREE.Mesh(geometry, material);
        scene.add(cube);

        function animate() {
            requestAnimationFrame(animate);
            cube.rotation.x += 0.01;
            cube.rotation.y += 0.01;
            renderer.render(scene, camera);
        }

        animate();

        // Adjust on Resize
        window.addEventListener("resize", () => {
            renderer.setSize(window.innerWidth, window.innerHeight);
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
        });
    </script>
</body>
</html>
